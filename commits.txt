5075 - IsaCc, 2025-09-14T21:41:18-04:00 : Ajuste los estilos y componetice las vistas de editar y crear profesores, de igual manera cree un store para manejar los datos de un profesor, tambien modifique el componente general input ahora tiene un ring mas pequeno y de color azul
f587 - IsaCc, 2025-09-14T16:32:31-04:00 : ahora los indidores deben de ser impares para los referentes teoricos, se agrego una pantalla que muestra un resumen de los resultados de todo un proyecto de aprendizaje mostrando las calificaciones de los estudiantes de cada indicador de cada referente del proyecto
84b8 - IsaCc, 2025-09-10T21:26:59-04:00 : instale headless ui, modifique el modal que se encuentra dentro de applayaut para que funcionara con los componente de dialog de headlessui, ademas tambien instale pinia para manejar los estados del modal, tambien cree un nuevo type que es Alert y es el type que se va a utilizar para cargar con informacion el modal de alertas, de igual manera modifique el mildware de inertia para que ahora incluya por defecto dentro de props a flash.alert el cual va a contener la informacion que debe mostrar el modal de alerta, los datos store del modal de alerta esta en resources/js/store/ModalStore, dentro de este store defini ademas de los datos que necesita el modal como title descripcion message y code, dos funciones para mostrar y oscultar el mismo de igual forma modifique la funcion dentro de services que cree los proyectos de aprendizaje para que ahora despues de crear un nuevo proyecto de aprendizaje redireccione a learning-project/index y muestre un mensaje de exitos con el modal alert. ademas en el input date de los referentes teoricos para que cuando se seleccione una fecha que sea fin de semana ademas de no dejar seleccionar la fecha y mostrar un mensaje debajo del input ahora tambien muestra un aler modal que explica que se a seleccionado una fecha invalida y que debe seleccionar otra.
96f4 - IsaCc, 2025-09-09T10:25:11-04:00 : Agrege un boton en el sidebar que redireccional al sistema Japeco principal; Agrege un boton en proyecto de aprendizaje que aparece cuando no existe ningun proyecto de aprendizej este boton redirecciona a las seccionees asignadas; cambie el nombre de 'Contenido del proyecto' por 'Diagnostico y Proposito' en las vistas; Cambie el nombre de 'Clases diarias' por 'Referente Teorico' en las vistas;
38ad - IsaCc, 2025-09-05T08:35:02-04:00 : update
5d81 - IsaCc, 2025-08-27T21:22:25-04:00 : modifique el welcome page le agrege un avatar que representa la actual propuesta de identidad del proyecto, modifique la apariencia de las matriculas en la lista de matriculas ademas componetice ese componente lo seccione en los componente mas minimos, ademas cree un archivo dto.d.ts en el que estoy definiendo la estructura de mis dtos del backen en el front con typescrip, en el back cambie la forma en la que estaba escribiendo las variables de snake case a came case esto para ser mas coherente y consistente ya que no era todo ni snake case ni calme case, ahora las variables y funciones normales van a estar en calme case las clases y las interfaces en upercase y las propiedades de los modelos en snake case ya que las base de datos no accetan otro tipo
22eb - IsaCc, 2025-08-25T06:41:56-04:00 : Se realizaron múltiples cambios: actualización y modificación de DTOs, factories, controladores y repositorios; se agregaron y modificaron servicios; nuevas migraciones y seeders; actualización de archivos de configuración (package.json, package-lock.json); cambios en estilos y componentes Vue para funcionalidades de proyectos de aprendizaje, clases diarias, inscripciones, estudiantes, docentes y evaluaciones.
b461 - IsaCc, 2025-08-22T21:18:16-04:00 : ya los profesores pueden registrar proyectos de aprendizaje y sus clases diarias, aun no se pueden crear clases diarias de forma aislada las clases diarias se estan creando con el proyecto de aprendizaje al principio, modifique el learninProjectDetailDTO para evitar la dependencia circular que estaba teniendo con Enrollment que contenia a learninProject y learninProject contenia a Enrollment lo cual estaba causando problemas, ahora learninProject retorna un EnrollmentDetail sin LearninProject para ello ecreado dos nuevos metodos estaticos en los factoris de App\Factories para que resivan un array de datos y devuelvan un DTO sencillo o Detail dependiendo del metodo estatico que se llame, ademas tambien cree una nueva vista para asignar estudiantes a las matriculas, de igual forma cree nuevos metodos para asignar estudiantes a un enrollment en enrollmentRepository
99d0 - IsaCc, 2025-08-20T19:59:23-04:00 : Modifique la vista que muestra todas las secciones registradas, ahora se muestran las secciones que ya estan en la base de datos, de igual forma ahora se pueden crear matriculas en la capa de servicios ahora agrege logica para que se creen las matriculas con los schoole_moment y schoole_year teniendo en cuenta la fecha actual, ademas las matriculasa creadas ahora se pueden asignar a un profesor y los profesores ahora pueden ver un listado de todas las matriculas que tienen han tenido asignadas, tambien modifique la forma en la que se estaban transformando los modelos en dtos ahora se podran crear DTOs detallados haciendo una inyeccion de dependencias a la funcion transformToLisDTO, tambien agrege un nuevo metodo publico para transformar un solo modelo en el tipo de DTO que le le inyecte como dependencia, esto para poder hacer un DTO de otro modelo ageno al del un servisio
f692 - IsaCc, 2025-08-19T21:08:57-04:00 : Agrege ya hice que registrara los estudiantes la pantalla CreateStudent.vue, modifique el archivo ahora tiene tres componentes principales uno que es en donde por cedula de identidad puedes puescar un representante ese campo se va a mostrar si no se envian los das de algun representante, los otros componentes son uno que muestra los datos del representante seleccionado y otro que solicita los datos que va a tener el estudiante, ambos componentes se muestran solo cuando existe ya un representante selecciondo. ademas tambien agrege una nueva submenu al sidebar esta submenu es para las matriculas ya tengo dos sub-items crear matricula la cual ya funciona, para ello configure el controller que le correspondia y ademas cree un Factory que me transforme un Responst en un objeto EnrollmentDTO, y tambien modifique la clase EnrollmentServices para que si el objeto EnrollmentDTO no tenia los atributos schoole_moment y schoole_year se le asignara uno en relaion a la fecha actual del equipo; para la otra vista que es lista de matriculas ya cree un maquetado con una propuesta de como puede ser el diseno de la presentacion de las matriculas, este componente no esta usando datos de la base de datos solo es html
531e7 - IsaCc, 2025-08-19T13:30:46-04:00 : modifique el sidebar para que ahora pueda tener mas items y subs niveles dentro del menu, tambien cree una vista que muestra todos los profesores registrados y o otra que muestra todos los estudiantes registrados, de igual manera agrege una vista para registrar nuevos profesores, modifique los repository de teachers y students para que ahora no devuelvan un array sino un DTO que va a contener informacion de la paginacion, esto para controlar las paginaciones para las operaciones que traen demaciados registros, ademas modifique las funciones que devuelven todos los registro de teacher y students para que devuelvan este dto de igual manera modifique las busquedas para que ahora no busque los datos con ::all(), sino ahora con ::paginate(10), ademas tambien agrege las rutas en el web.php para manejar las solucitudes a los controllers correspondientes
abcc - IsaCc, 2025-08-13T14:28:46-04:00 : respaldo antes de intalar tailwin
ccc6 - IsaCc, 2025-08-10T16:25:55-04:00 : Cree un nuevo DTO para los roles 'Role' ademas le aplique una interfaz vacia a todos los DTOs para poder manejarlos como iguales, la interfaz que cree es DTOSummary y esta dentro de App\DTOs\Summary y se la aplique a todos los DTO dentro del directorio Summary dentro de DTOs, ademas elimine todos los Traits que habia definido para los Repositories ahora las funciones tranformListDTO y transformToDTO las voy a estar manejando con una clase abstracta de la cual deben heredar todos los DTOs, esta clase se llama TranformDTOs y dentro de ella deje tal cual el metodo transformListDTO  pero le cambie la propiedad private por protected y la funcion TranformToDTO la defini como abstracta para que se tenga que implementar en cada Repository, de igual manera TransformToDTO resive un objeto de tipo Model del ORM de laravel y devuelve un objeto con la interfaz DTOSummary
bacf - IsaCc, 2025-08-07T22:30:58-04:00 : movi los archivos que estaban en App\DTOs y los puse en un nuevo paquete dentro del mismo directorio 'Summary' y tambien modifique los namespace y todos los archivos de Repository que hacian referencia al antiguo namespace
2305 - IsaCc, 2025-08-07T13:12:51-04:00 : Modifique todos los DTOs cambie la forma en la que los estaba relacionando ahora enves de recivir otro DTO para relacionarlos solo espera un int dto_id, ademas cree dos paquetes mas uno detail y search ambos para los DTOs el details va a contener los mismos DTOs pero enves de hacer las relaciones por ids la va hacer esperando el DTO con el que se relaciona esto para casos especificos y puntuales en donde se pueda necesitar informacion de una entidad y sus relaciones y datos de sus relaciones, de igual manera los DTOs dentro del paquete Search tienen las mismas propiedades que los DTOs originales pero con la diferencia que todos los atributos son NULL por defecto, esto con la intencion de crear filtros dinamicos en un futuro que esperen un DTO de este tipo SearchDTO
ab9b - IsaCc, 2025-08-07T10:47:41-04:00 : agrege exepciones para manejar los exectiones que se puedan generar en los repositories, las exepciones estan en la carpeta App/Exceptions dentro hay subscarpetas para cada tipo de exepcion,
eeb3 - IsaCc, 2025-08-04T21:48:01-04:00 : Agrege los Repository y los configure para realizar las operaciones basicas necesarias para el funcionamiento de las futuras clases services
c599 - IsaCc, 2025-07-31T16:46:08-04:00 : modifique los modelos para que matricula sea unica por cada lapso y hasi permitir ser mas flexible a cambios en las matriculas y cambio de profesores, agrege un campo en enrollment 'school_moment' y removi de learning_project a 'school_moment', y ahora la relacion entre learning_project y enrollment es de uno a uno, por lo que una matricula solo puede tener un solo proyecto de aprendizaje y asi el campo teacher_id se repite en enrollment y learning_project para llevar un control mas exacto de quien hizo el proyecto de aprendizaje y no solo ver quien es el profesor acargo de la matricula; ademas cree clases DTOs para manipular los modelos mas adelante permitienedo el desacoplamiento de la capa de persistencia con la capa de logica de negocio
a8c6 - IsaCc, 2025-07-28T21:04:51-04:00 : Cree y configure los modelos y relaciones necesario para manejar la base de datos, para relacionar la tabla 'teachers' con la tabla 'users' utilize una relacion uno a uno polimorfica con la funcion morphTo para que un usuario pueda o no tener un teacher relacionado
5a6b - IsaCc, 2025-07-26T20:55:41-04:00 : creacion y configuracion de migraciones
c4ec - Ezequiel-Ardiles, 2025-07-26T09:39:04-04:00 : Create README.md
79b9 - IsaCc, 2025-07-26T08:34:55-04:00 : Initial commit